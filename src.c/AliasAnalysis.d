/* file generated by oo2c -- do not edit */
#include "AliasAnalysis.h"
#include "Opcode.h"
#include "SymbolTable.h"
#include "Worklist.h"

/* local definitions */
unsigned char AliasAnalysis__enabled;
static Worklist__Worklist AliasAnalysis__worklist;
typedef struct AliasAnalysis__Aliasing_Selector {
  signed char category;
  char _1pad, _2pad, _3pad;
  Data__Usable var;
  Data__Struct type;
  Data__Instruction instr;
} AliasAnalysis__Aliasing_Selector;
typedef AliasAnalysis__Aliasing_Selector AliasAnalysis__Aliasing_Designator[16];

/* function prototypes */
unsigned char AliasAnalysis__ArrayCompatible(Data__Struct a, Data__Struct b);
unsigned char AliasAnalysis__SubtypeOf(Data__Struct subStruct, Data__Struct superStruct, unsigned char arrayCompat);
signed char AliasAnalysis__Aliasing_HandleGate_CheckStoreGate(Data__Instruction baseInstr, signed char baseMode, Data__Instruction gate, signed char gateMode, Data__Region outerRegion, Data__Instruction *AliasAnalysis__Aliasing_HandleGate_ref);
signed char AliasAnalysis__Aliasing_HandleGate(Data__Gate gate, signed char gateMode, Data__Instruction i, signed char iMode);
unsigned char AliasAnalysis__Aliasing_GetsVarAddress_VarParAddress(Data__Result res, Data__Object *AliasAnalysis__Aliasing_GetsVarAddress_var);
unsigned char AliasAnalysis__Aliasing_GetsVarAddress(Data__Instruction call, Data__Object var);
signed char AliasAnalysis__Aliasing_CopyAlias(Data__Instruction copy, signed char copyMode, Data__Instruction instr, signed char instrMode);
unsigned char AliasAnalysis__Aliasing_WildOpcode(short int opc);
Data__Instruction AliasAnalysis__Aliasing_BuildDesignator_SetSelector_GetLocalAdr(Data__Usable u);
Data__Instruction AliasAnalysis__Aliasing_BuildDesignator_SetSelector_Base(Data__Usable value, Data__Usable adr);
void AliasAnalysis__Aliasing_BuildDesignator_SetSelector_FollowUpdate(Data__Instruction i, AliasAnalysis__Aliasing_Selector AliasAnalysis__Aliasing_BuildDesignator_d[16], short int *AliasAnalysis__Aliasing_BuildDesignator_level);
void AliasAnalysis__Aliasing_BuildDesignator_SetSelector(Data__Instruction i, AliasAnalysis__Aliasing_Selector *s, _Type s__tag, short int *AliasAnalysis__Aliasing_BuildDesignator_level, Data__Usable *AliasAnalysis__Aliasing_BuildDesignator_rvalue, AliasAnalysis__Aliasing_Selector AliasAnalysis__Aliasing_BuildDesignator_d[16]);
void AliasAnalysis__Aliasing_BuildDesignator(Data__Instruction i, AliasAnalysis__Aliasing_Selector d[16], short int *level);
unsigned char AliasAnalysis__Aliasing_ComputeAliasing_ArrayOfByte(Data__Instruction i);
signed char AliasAnalysis__Aliasing_ComputeAliasing(AliasAnalysis__Aliasing_Selector d0_[16], short int l0, AliasAnalysis__Aliasing_Selector d1_[16], short int l1);
unsigned char AliasAnalysis__IsAccess(Data__Result dummy, Data__Instruction instr);
void AliasAnalysis__SimplifyAccess_AttemptReplacement(Data__Instruction instr, Data__Opnd with);
Data__Opnd AliasAnalysis__SimplifyAccess_GetGateBase(Data__Opnd opnd, Data__Region outerRegion);
void AliasAnalysis__SimplifyAccess(Data__Instruction instr);
void AliasAnalysis__Analyse_AddAccessInstr(Data__Region r);

/* module and type descriptors */
static const struct {
  int length;
  void* pad;
  const char name[14];
} _n0 = {14, NULL, {"AliasAnalysis"}};
static struct _MD AliasAnalysis_md = {
  NULL, 
  &Kernel__ModuleDesc_td.td, 
  {
    NULL, 
    (const unsigned char*)_n0.name, 
    -1, 
    NULL
  }
};

static const struct {
  int length;
  void* pad;
  _Type btypes[1];
} AliasAnalysis__Aliasing_Selector_tdb = {
  1, 
  NULL, 
  {
    &AliasAnalysis__Aliasing_Selector_td.td
  }
};
static const struct {
  int length;
  void* pad;
  const void* tbprocs[1];
} _tb0 = {0, NULL, {
  NULL
}};
struct _TD AliasAnalysis__Aliasing_Selector_td = {
  NULL,
  &Types__TypeDesc_td.td,
  {
    AliasAnalysis__Aliasing_Selector_tdb.btypes,
    _tb0.tbprocs,
    NULL,
    &AliasAnalysis_md.md,
    0, 
    '0', '1',
    sizeof(AliasAnalysis__Aliasing_Selector),
    NULL
  }
};

/* local strings */

