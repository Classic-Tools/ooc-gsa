/* file generated by oo2c -- do not edit */
#include "StdPragmas.h"
#include "Config.h"
#include "ParamPragmas.h"

/* local definitions */
ParamOptions__BooleanOption StdPragmas__caseSelectCheck;
ParamOptions__BooleanOption StdPragmas__indexCheck;
ParamOptions__BooleanOption StdPragmas__rangeCheck;
ParamOptions__BooleanOption StdPragmas__derefCheck;
ParamOptions__BooleanOption StdPragmas__functResult;
ParamOptions__BooleanOption StdPragmas__typeGuard;
ParamOptions__BooleanOption StdPragmas__intOverflowCheck;
ParamOptions__BooleanOption StdPragmas__intDivCheck;
ParamOptions__BooleanOption StdPragmas__realOverflowCheck;
ParamOptions__BooleanOption StdPragmas__realDivCheck;
ParamOptions__BooleanOption StdPragmas__warnings;
ParamOptions__BooleanOption StdPragmas__assertions;
ParamOptions__BooleanOption StdPragmas__initialize;
ParamOptions__IntegerOption StdPragmas__poisonHeap;
ParamOptions__BooleanOption StdPragmas__stackCheck;
ParamOptions__BooleanOption StdPragmas__conformantMode;
ParamOptions__StringOption StdPragmas__compiler;
ParamOptions__StringOption StdPragmas__compilerVersion;
ParamOptions__IntegerOption StdPragmas__compilerMajor;
ParamOptions__IntegerOption StdPragmas__compilerMinor;
ParamOptions__StringOption StdPragmas__targetOS;
ParamOptions__StringOption StdPragmas__targetArch;
ParamOptions__StringOption StdPragmas__targetArchMinor;
ParamOptions__IntegerOption StdPragmas__targetInteger;
ParamOptions__IntegerOption StdPragmas__targetAddress;
ParamOptions__StringOption StdPragmas__targetByteOrder;

/* function prototypes */
void StdPragmas__CreatePragma(ParamOptions__BooleanOption *pragma, const unsigned char* name__ref, int name_0d, unsigned char default_);

/* module and type descriptors */
static const struct {
  int length;
  void* pad;
  const char name[11];
} _n0 = {11, NULL, {"StdPragmas"}};
static struct _MD StdPragmas_md = {
  NULL, 
  &Kernel__ModuleDesc_td.td, 
  {
    NULL, 
    (const unsigned char*)_n0.name, 
    -1, 
    NULL
  }
};

/* local strings */
static const unsigned char _c31[] = "unknown";
static const unsigned char _c30[] = "TARGET_BYTE_ORDER";
static const unsigned char _c29[] = "TARGET_ADDRESS";
static const unsigned char _c28[] = "TARGET_INTEGER";
static const unsigned char _c27[] = "";
static const unsigned char _c26[] = "TARGET_ARCH_MINOR";
static const unsigned char _c25[] = "ANSI-C";
static const unsigned char _c24[] = "TARGET_ARCH";
static const unsigned char _c23[] = "Unix";
static const unsigned char _c22[] = "TARGET_OS";
static const unsigned char _c21[] = "COMPILER_MINOR";
static const unsigned char _c20[] = "COMPILER_MAJOR";
static const unsigned char _c19[] = "devel";
static const unsigned char _c18[] = "COMPILER_VERSION";
static const unsigned char _c17[] = "OOC";
static const unsigned char _c16[] = "COMPILER";
static const unsigned char _c15[] = "PoisonHeap";
static const unsigned char _c14[] = "RealDivCheck";
static const unsigned char _c13[] = "RealOverflowCheck";
static const unsigned char _c12[] = "IntDivCheck";
static const unsigned char _c11[] = "OverflowCheck";
static const unsigned char _c10[] = "TypeGuard";
static const unsigned char _c9[] = "FunctResult";
static const unsigned char _c8[] = "DerefCheck";
static const unsigned char _c7[] = "RangeCheck";
static const unsigned char _c6[] = "IndexCheck";
static const unsigned char _c5[] = "CaseSelectCheck";
static const unsigned char _c4[] = "ConformantMode";
static const unsigned char _c3[] = "StackCheck";
static const unsigned char _c2[] = "Initialize";
static const unsigned char _c1[] = "Assertions";
static const unsigned char _c0[] = "Warnings";

