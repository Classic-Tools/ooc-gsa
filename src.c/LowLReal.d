/* file generated by oo2c -- do not edit */
#include "LowLReal.h"
#include "LowReal.h"

/* local definitions */
typedef int LowLReal__LongInt[2];
typedef unsigned int LowLReal__LongSet[2];
unsigned char LowLReal__isBigEndian;

/* function prototypes */
void LowLReal__Move(double *x, int* ra, int ra_0d);
void LowLReal__MoveSet(double *x, unsigned int* ra, int ra_0d);
double LowLReal__ToReal(const unsigned int* ra__ref, int ra_0d);
double LowLReal__MaskReal(double x, short int lo);
unsigned char LowLReal__In(short int bit, double x);

/* module and type descriptors */
static const struct {
  int length;
  void* pad;
  const void* list[22];
} _p0 = {22, NULL, {
  (const void*)&LowLReal__ClearError,
  (const void*)&LowLReal__ErrorHandler,
  (const void*)&LowLReal__IsInfinity,
  (const void*)&LowLReal__IsLowException,
  (const void*)&LowLReal__IsNaN,
  (const void*)&LowLReal__Real,
  (const void*)&LowLReal__currentMode,
  (const void*)&LowLReal__err,
  (const void*)&LowLReal__exponent,
  (const void*)&LowLReal__exponent10,
  (const void*)&LowLReal__fraction,
  (const void*)&LowLReal__fractpart,
  (const void*)&LowLReal__intpart,
  (const void*)&LowLReal__pred,
  (const void*)&LowLReal__round,
  (const void*)&LowLReal__scale,
  (const void*)&LowLReal__setMode,
  (const void*)&LowLReal__sign,
  (const void*)&LowLReal__succ,
  (const void*)&LowLReal__synthesize,
  (const void*)&LowLReal__trunc,
  (const void*)&LowLReal__ulp,
}};
static const struct {
  int length;
  void* pad;
  const void* list[1];
} _p1 = {1, NULL, {
  (const void*)&LowLReal__isBigEndian,
}};
static const struct {
  int length;
  void* pad;
  const char name[9];
} _n0 = {9, NULL, {"LowLReal"}};
static struct _MD LowLReal_md = {
  NULL, 
  &Kernel__ModuleDesc_td.td, 
  {
    NULL, 
    (const unsigned char*)_n0.name, 
    -1, 
    NULL,
    _p0.list,
    _p1.list,
    -1337224103
  }
};

/* local strings */

