/* file generated by oo2c -- do not edit */
#include "ConstPropagation.h"
#include "ErrorInstr.h"
#include "Error.h"
#include "WriteGSA.h"
#include "IntArith.h"
#include "LowLReal.h"
#include "Out.h"
#include "Opcode.h"
#include "StdTypes.h"
#include "SymbolTable.h"
#include "Termination.h"
#include "Worklist.h"

/* local definitions */
static int ConstPropagation__counter;
typedef struct ConstPropagation__LatticeDesc {
  Data__Opnd useList;
  Data__Info info;
  int marker;
  int state;
  Data__Const const_;
} ConstPropagation__LatticeDesc;
typedef struct ConstPropagation__LatticeDesc* ConstPropagation__Lattice;
static ConstPropagation__Lattice ConstPropagation__unclassifiedLattice;
static ConstPropagation__Lattice ConstPropagation__nonConstLattice;
static ConstPropagation__Lattice ConstPropagation__falseLattice;
static ConstPropagation__Lattice ConstPropagation__trueLattice;
static ConstPropagation__Lattice ConstPropagation__unreachableLattice;

/* function prototypes */
unsigned char ConstPropagation__Foldable(Data__Instruction instr);
Data__Struct ConstPropagation__ConstantFolding_GetType(Data__Instruction instr, int res, unsigned char *ConstPropagation__ConstantFolding_adaptType);
Data__Const ConstPropagation__ConstantFolding_EvalMonadicIntOp(IntArith__MonadicOperator op, Data__Const opnd, signed char *ConstPropagation__ConstantFolding_intRange, short int *ConstPropagation__ConstantFolding_err, Data__Instruction *ConstPropagation__ConstantFolding_instr, unsigned char *ConstPropagation__ConstantFolding_adaptType);
Data__Const ConstPropagation__ConstantFolding_EvalDyadicIntOp(IntArith__DyadicOperator op, Data__Const opnd1, Data__Const opnd2, signed char *ConstPropagation__ConstantFolding_intRange, short int *ConstPropagation__ConstantFolding_err, Data__Instruction *ConstPropagation__ConstantFolding_instr, unsigned char *ConstPropagation__ConstantFolding_adaptType);
Data__Const ConstPropagation__ConstantFolding_GetSetConst(unsigned int set, Data__Instruction *ConstPropagation__ConstantFolding_instr);
Data__Const ConstPropagation__ConstantFolding_SystemROT(Data__Const x, Data__Const n, Data__Struct type, unsigned char *ConstPropagation__ConstantFolding_adaptType);
Data__Const ConstPropagation__ConstantFolding_SystemLSH(Data__Const x, Data__Const n, Data__Struct type, unsigned char *ConstPropagation__ConstantFolding_adaptType);
float ConstPropagation__ConstantFolding_ShortToReal(double x);
Data__Const ConstPropagation__ConstantFolding_TypeCast(Data__Const arg, Data__Struct dest);
Data__Const ConstPropagation__ConstantFolding(Data__Instruction instr, Data__Const opnd1, Data__Const opnd2, unsigned char adaptType);
unsigned char ConstPropagation__HasLattice(Data__Usable usable);
ConstPropagation__Lattice ConstPropagation__ConstLattice(Data__Const const_);
void ConstPropagation__InitLattice(Data__Usable usable);
void ConstPropagation__RegionInitLattices(Data__Region reg);
Data__Const ConstPropagation__LatticeOfGate_ConstantInput(Data__Gate gate);
ConstPropagation__Lattice ConstPropagation__LatticeOfGate(Data__Gate gate);
ConstPropagation__Lattice ConstPropagation__LatticeOfMerge_TakenCase(Data__Merge merge);
ConstPropagation__Lattice ConstPropagation__LatticeOfMerge_TakenMergeRegion(Data__Merge merge);
ConstPropagation__Lattice ConstPropagation__LatticeOfMerge(Data__Merge merge);
ConstPropagation__Lattice ConstPropagation__ComputeConstantResults(Data__Instruction instr);
ConstPropagation__Lattice ConstPropagation__LatticeOfGuard(Data__Guard guard);
ConstPropagation__Lattice ConstPropagation__NewLattice(Data__Instruction instr);
unsigned char ConstPropagation__UsingHook(Data__Result used, Data__Instruction instr);
void ConstPropagation__ConstPropagation_ReplaceGatesByArgument(Data__Merge merge);
void ConstPropagation__ConstPropagation_ReplaceByConstants(Data__Region region);
void ConstPropagation__ConstPropagation_ReplaceRegions_FindRegionToReplace(Data__Region region, Data__Region *ConstPropagation__ConstPropagation_ReplaceRegions_replaceRegion);
void ConstPropagation__ConstPropagation_ReplaceRegions_ReplaceSingleRegion(Data__Merge merge, unsigned char *ConstPropagation__ConstPropagation_ReplaceRegions_changed);
void ConstPropagation__ConstPropagation_ReplaceRegions_ReplaceConstantRegions(Data__Region region, unsigned char *ConstPropagation__ConstPropagation_ReplaceRegions_changed);
void ConstPropagation__ConstPropagation_ReplaceRegions(Data__Region region);
void ConstPropagation__ConstPropagation_MarkUnreachable(Data__Region region, Worklist__Worklist *ConstPropagation__ConstPropagation_worklist);
void ConstPropagation__ConstPropagation_InitialWorklist(Data__Region region, unsigned char add, Worklist__Worklist *ConstPropagation__ConstPropagation_worklist);
void ConstPropagation__ConstPropagation_AssertCorrectMarking(Data__Region region);

/* module and type descriptors */
static const struct {
  int length;
  void* pad;
  const char name[17];
} _n0 = {17, NULL, {"ConstPropagation"}};
static struct _MD ConstPropagation_md = {
  NULL, 
  &Kernel__ModuleDesc_td.td, 
  {
    NULL, 
    (const unsigned char*)_n0.name, 
    -1, 
    NULL
  }
};

static const struct {
  int length;
  void* pad;
  const char name[12];
} _n1 = {12, NULL, {"LatticeDesc"}};
static const struct {
  int length;
  void* pad;
  _Type btypes[4];
} ConstPropagation__LatticeDesc_tdb = {
  4, 
  NULL, 
  {
    &Data__InfoDesc_td.td, 
    &Data__NodeDesc_td.td, 
    &Data__UsableDesc_td.td, 
    &ConstPropagation__LatticeDesc_td.td
  }
};
static const struct {
  int length;
  void* pad;
  const void* tbprocs[2];
} _tb0 = {2, NULL, {
  (void*)Data__NodeDesc_Greg, 
  (void*)Data__UsableDesc_ReplaceUses
}};
struct _TD ConstPropagation__LatticeDesc_td = {
  NULL,
  &Types__TypeDesc_td.td,
  {
    ConstPropagation__LatticeDesc_tdb.btypes,
    _tb0.tbprocs,
    (const unsigned char*)_n1.name,
    &ConstPropagation_md.md,
    3, 
    '0', '1',
    sizeof(ConstPropagation__LatticeDesc),
    NULL
  }
};

/* local strings */
static const unsigned char _c4[] = " for: ";
static const unsigned char _c3[] = " to ";
static const unsigned char _c2[] = "Illegal lattice state change:";
static const unsigned char _c1[] = "\264 : ";
static const unsigned char _c0[] = "Incorrect marking of \264";

