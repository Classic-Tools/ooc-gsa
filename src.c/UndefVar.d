/* file generated by oo2c -- do not edit */
#include "UndefVar.h"
#include "GuardCond.h"
#include "Error.h"
#include "Opcode.h"
#include "Scanner.h"
#include "SymbolTable.h"

/* local definitions */
typedef GuardCond__RegionInfo* UndefVar__InfoList;
typedef GuardCond__Condition* UndefVar__CondList;
static UndefVar__InfoList UndefVar__infoList;
static UndefVar__CondList UndefVar__trueList;
static short int UndefVar__topOfStack;
typedef Data__Opnd* UndefVar__UseStack;
static UndefVar__UseStack UndefVar__useStack;
static int UndefVar__useStackSize;

/* function prototypes */
void UndefVar__AddToTrue(GuardCond__Condition *c, _Type c__tag);
unsigned char UndefVar__False(GuardCond__Condition *c, _Type c__tag);
Data__Region UndefVar__Reachable_AddGuardToTrue_SinglePath(Data__Merge merge);
unsigned char UndefVar__Reachable_AddGuardToTrue(GuardCond__RegionInfo info);
unsigned char UndefVar__Reachable_AddGatesToTrue(Data__Opnd gateOpnd);
void UndefVar__Reachable_PopTrue(short int oldCount);
unsigned char UndefVar__Reachable_Test(short int i, Data__Opnd opnd, Data__Object *UndefVar__Reachable_var);
unsigned char UndefVar__Reachable(Data__Object var, Data__Opnd opnd);
void UndefVar__InspectUses_PushUse(Data__Opnd use);
void UndefVar__InspectUses_PopUse(void);
unsigned char UndefVar__InspectUses_IgnoredOperand(Data__Opnd opnd);
unsigned char UndefVar__InspectUses_NotCollectingOperand(Data__Opnd opnd);
unsigned char UndefVar__InspectUses_UnknownProcedure(Data__Instruction call);
unsigned char UndefVar__InspectUses_Contradicting(Data__Opnd use);
unsigned char UndefVar__InspectUses_AbstractProc(Data__Object var);
void UndefVar__InspectUses(Data__Object var, Data__Usable u, signed char status, Data__Gate oldGates);
unsigned char UndefVar__ReadsEmptyStore(Data__Object var);
void UndefVar__CheckVars_InspectLocalVars(Data__Object obj);
void UndefVar__CheckVars_MarkNotInspected(Data__Instruction instr);
void UndefVar__CheckVars_InitTrueList(Data__Region r);

/* module and type descriptors */
static const struct {
  int length;
  void* pad;
  const void* list[1];
} _p0 = {1, NULL, {
  (const void*)&UndefVar__CheckVars,
}};
static const struct {
  int length;
  void* pad;
  const void* list[0];
} _p1 = {0, NULL, {
}};
static const struct {
  int length;
  void* pad;
  const char name[9];
} _n0 = {9, NULL, {"UndefVar"}};
static struct _MD UndefVar_md = {
  NULL, 
  &Kernel__ModuleDesc_td.td, 
  {
    NULL, 
    (const unsigned char*)_n0.name, 
    -1, 
    NULL,
    _p0.list,
    _p1.list,
    1066261750
  }
};

/* local strings */
static const unsigned char _c0[] = "$result";

